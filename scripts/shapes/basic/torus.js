// torus.js - Basic torus (donut) shape
import * as THREE from 'https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.module.js';
import { BaseShape, ShapeUtils } from '../../modules/baseShape.js';

class Torus extends BaseShape {
    constructor() {
        super('torus', 'Torus (Donut)', 'BASIC SHAPES');

        this.setDescription('A torus is a surface of revolution generated by revolving a circle around an axis. Commonly known as a donut shape, it demonstrates important topological properties.')
            .setTags('basic', 'donut', 'ring', 'revolution', 'circular', 'topology')
            .setDifficulty(2);

        this.setProperties({
            faces: 'N/A (smooth surface)',
            vertices: 'N/A (smooth surface)',
            edges: 'N/A (smooth surface)',
            volume: 39.48,              // 2π²Rr² for R=1, r=0.4
            surfaceArea: 31.58,         // 4π²Rr for R=1, r=0.4
            eulerCharacteristic: 0      // χ = 0 for torus
        });

        this.setMathematical({
            equation: '(√(x² + y²) - R)² + z² = r²',
            parametricDomain: { u: [0, 2*Math.PI], v: [0, 2*Math.PI] },
            symmetryGroup: 'SO(2) × SO(2)',
            classification: 'Surface of revolution, genus-1 surface',
            discoverer: 'Ancient mathematicians',
            yearDiscovered: -500
        });

        this.setEducational({
            level: 'intermediate',
            topics: ['topology', 'differential-geometry', 'surfaces-of-revolution', 'genus'],
            applications: ['engineering', 'electromagnetics', 'donut-industry', 'tire-design'],
            relatedShapes: ['cylinder', 'sphere', 'torusKnot'],
            interactiveFeatures: ['rotation', 'scaling', 'material-change', 'transparency']
        });

        this.setTechnical({
            renderComplexity: 'medium',
            recommendedSegments: { min: 8, max: 128, default: 32 },
            performanceNotes: 'Requires good segment count for smooth curves',
            limitations: ['Inner surface may not render well at low segment counts']
        });

        this.setVisual({
            defaultMaterial: 'standard',
            recommendedColors: ['#e67e22', '#9b59b6', '#1abc9c', '#e74c3c'],
            bestViewingAngles: ['diagonal', 'top', 'side'],
            animationSuggestions: ['spinning', 'tumbling', 'color-cycling']
        });

        this.setMetadata({
            version: '2.0.0',
            author: 'ShapeMorpher Core Team',
            status: 'stable'
        });
    }

    createGeometry(segments = 32) {
        segments = ShapeUtils.clampSegments(segments);
        return new THREE.TorusGeometry(1, 0.4, segments, segments);
    }
}

export function registerShape(registry) {
    const shape = new Torus();
    shape.register(registry);
}